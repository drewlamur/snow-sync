require "logger"
require "./sync_util.rb"

@util = SnowSync::SyncUtil.new

yield_options = {

  object: ::Logger.new(STDERR),

  start: proc do |logger|
    logger.level = Logger::INFO
    @util.start_sync
  end,
  
  stop: proc do |logger| 
    logger.info "Guard::Yield - Done!"
  end,

  run_on_modifications: proc do |logger, _, files|
    @util.push_modifications(files)
    logger.info "!!: #{files}"
    uname = `uname`.chomp.downcase
    @util.notify(files, uname, logger)
  end,

  run_on_additions: proc do |logger, _, files| 
    logger.info "++: #{files}"
  end,

  run_on_removals: proc do |logger, _, files|
    logger.warn "xx: #{files}"
  end,

}

# method initializes the watcher
def guard_watch(yield_options)
  guard :yield, yield_options do
    watch(/^sync\//)
  end
end

# called when guard starts
guard_watch(yield_options)
